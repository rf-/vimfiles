" Quickly open a Ruby REPL
nnoremap <C-e> :bel 10split term://pry<CR>

" Run selection in a Ruby REPL
vnoremap <C-e> y:bel 10split term://pry<CR><C-\><C-n>pi<CR>

""" Terminal-related config

" Bind <C-\><C-\> to exit terminal
tnoremap <C-\><C-\> <C-\><C-n>

" Bind <C-\><C-k> to <C-k> for line editing
tnoremap <C-\><C-k> <C-k>

" Increase scrollback
let g:terminal_scrollback_buffer_size=100000

" Allow tab navigation directly from terminal
tnoremap <C-h> <C-\><C-n><C-w>h
tnoremap <C-j> <C-\><C-n><C-w>j
tnoremap <C-k> <C-\><C-n><C-w>k
tnoremap <C-l> <C-\><C-n><C-w>l

" On entering a terminal buffer, automatically focus
autocmd BufWinEnter,WinEnter term://* startinsert

" Fix meta bindings in terminal
for c in range(0, 25)
  let char=nr2char(c + char2nr("a"))
  exec "tnoremap <M-" . char . "> <Esc>" . char

  let char=nr2char(c + char2nr("A"))
  exec "tnoremap <M-" . char . "> <Esc>" . char
endfor

" In terminal buffers, make <Enter> automatically jump into insert mode
nnoremap <expr> <Enter> &buftype == 'terminal' ? 'i<CR>' : '<CR>'


"" Plugins

Bundle 'Shougo/unite.vim'
  call unite#filters#matcher_default#use(['matcher_fuzzy'])
  let g:unite_source_buffer_time_format = ''
  nnoremap <Leader>t :<C-u>Unite -no-split -start-insert buffer<CR>
  nnoremap <Leader>T :<C-u>Unite -no-split -start-insert file_rec/neovim<CR>

  let g:unite_source_history_yank_enable = 1
  nnoremap <Leader>y :Unite history/yank<CR>

  " Make it easier to leave insert mode
  au FileType unite imap <buffer> <Space> <Plug>(unite_insert_leave)

  " Disable bindings for unite_choose_action
  au FileType unite nunmap <buffer> a
  au FileType unite nunmap <buffer> <Tab>
  au FileType unite iunmap <buffer> <Tab>
